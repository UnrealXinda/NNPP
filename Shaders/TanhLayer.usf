#include "/Engine/Private/Common.ush"

StructuredBuffer<float> InputBuffer;
RWStructuredBuffer<float> OutputBuffer;

[numthreads(32, 1, 1)]
void TanhLayer(uint3 ThreadId : SV_DispatchThreadID)
{
	const uint3 InputDim = uint3(TanhLayerUniform.InputDimX, TanhLayerUniform.InputDimY, TanhLayerUniform.InputDimZ);
	const uint3 OutputDim = uint3(TanhLayerUniform.OutputDimX, TanhLayerUniform.OutputDimY, TanhLayerUniform.OutputDimZ);
	const uint3 InputDimIndexMult = uint3(
		TanhLayerUniform.InputDimIndexMultX,
		TanhLayerUniform.InputDimIndexMultY,
		TanhLayerUniform.InputDimIndexMultZ);
	
	uint Idx = dot(ThreadId, InputDimIndexMult);
	
	if (Idx < InputDim.x * InputDim.y * InputDim.z 
		&& Idx < OutputDim.x * OutputDim.y * OutputDim.z)
	{
		OutputBuffer[Idx] = tanh(InputBuffer[Idx]);
	}
}
#include "/Engine/Private/Common.ush"

StructuredBuffer<float> InputBuffer;
RWTexture2D<float4> OutputTexture;

[numthreads(32, 32, 1)]
void OutputLayer(uint3 ThreadId : SV_DispatchThreadID)
{
	const uint3 InputDim          = OutputLayerUniform.InputDim;
	const uint3 InputDimIndexMult = OutputLayerUniform.InputDimIndexMult;
	
	if (ThreadId.x < InputDim.x && ThreadId.y < InputDim.y)
	{		
		uint2 RemappedId = uint2(ThreadId.y, InputDim.x - 1 - ThreadId.x);
		OutputTexture[RemappedId.xy] = float4(
			saturate(float3(
				lerp(InputBuffer[dot(uint3(ThreadId.xy, 0), InputDimIndexMult)], 1.0f, 0.5f),
				lerp(InputBuffer[dot(uint3(ThreadId.xy, 1), InputDimIndexMult)], 1.0f, 0.5f),
				lerp(InputBuffer[dot(uint3(ThreadId.xy, 2), InputDimIndexMult)], 1.0f, 0.5f))
			),
			1.0f);
	}	
}
#include "/Engine/Private/Common.ush"
#include "ConvLayer.ush"

StructuredBuffer<float> InputBuffer;
StructuredBuffer<float> WeightBuffer;
RWStructuredBuffer<float> OutputBuffer;

#define FilterSize 256

groupshared float Cache[FilterSize * 4];

[numthreads(FilterSize, 1, 4)]
void ConvLayer256(uint3 ThreadId : SV_DispatchThreadID, uint3 GroupId : SV_GroupThreadID)
{
	const uint3 InputDim           = ConvLayer256Uniform.InputDim;
	const uint3 OutputDim          = ConvLayer256Uniform.OutputDim;
	const uint3 InputDimIndexMult  = ConvLayer256Uniform.InputDimIndexMult;
	const uint3 OutputDimIndexMult = ConvLayer256Uniform.OutputDimIndexMult;
	const uint4 WeightDim          = ConvLayer256Uniform.WeightDim;
	const uint4 WeightDimIndexMult = ConvLayer256Uniform.WeightDimIndexMult;
	const uint2 Stride             = ConvLayer256Uniform.Stride;
	
	SHADER_IMPLEMENTATION(FilterSize)
}

#undef FilterSize